name: Deploy to DigitalOcean

on:
  push:
    branches:
      - staging-do
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Build Docker image
        run: docker build -t pandacare:latest .

      - name: Save Docker image to tar
        run: docker save pandacare:latest > pandacare.tar

      - name: Compress Docker image
        run: gzip -f pandacare.tar

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          source: "pandacare.tar.gz,docker-compose.yml"
          target: '/home/${{ secrets.DO_USERNAME }}/pandacare-be'
          timeout: 120s

      - name: Deploy on DigitalOcean with docker-compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          timeout: 120s
          script: |
            # Navigate to the application directory
            cd /home/${{ secrets.DO_USERNAME }}/pandacare-be
            
            # Decompress the Docker image
            gunzip -f pandacare.tar.gz

            # Load Docker image
            docker load < pandacare.tar

            docker-compose down || true

            docker-compose up -d --remove-orphans

            # Clean up
            rm pandacare.tar
